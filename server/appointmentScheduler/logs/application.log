{"dateTime" : "2019-02-01 23:43:21,376", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Starting AppointmentScheduler on MLeclaiookPro13 with PID 7350 (/Users/marc-andreleclair/Documents/AppSechduler/AppointmentScheduler/server/target/classes started by marc-andreleclair in /Users/marc-andreleclair/Documents/AppSechduler/AppointmentScheduler/server) }"}
{"dateTime" : "2019-02-01 23:43:21,382", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:No active profile set, falling back to default profiles: default }"}
{"dateTime" : "2019-02-01 23:43:21,426", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b239d7d: startup date [Fri Feb 01 23:43:21 EST 2019]; root of context hierarchy }"}
{"dateTime" : "2019-02-01 23:43:22,419", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$588c1299] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) }"}
{"dateTime" : "2019-02-01 23:43:22,560", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$f139dad3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) }"}
{"dateTime" : "2019-02-01 23:43:22,568", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) }"}
{"dateTime" : "2019-02-01 23:43:22,572", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@33abde31' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) }"}
{"dateTime" : "2019-02-01 23:43:22,576", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$160e7d85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) }"}
{"dateTime" : "2019-02-01 23:43:22,589", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) }"}
{"dateTime" : "2019-02-01 23:43:22,965", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Tomcat initialized with port(s): 3000 (http) }"}
{"dateTime" : "2019-02-01 23:43:22,974", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Initializing ProtocolHandler ["http-nio-3000"] }"}
{"dateTime" : "2019-02-01 23:43:22,980", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Starting service [Tomcat] }"}
{"dateTime" : "2019-02-01 23:43:22,981", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Starting Servlet Engine: Apache Tomcat/8.5.34 }"}
{"dateTime" : "2019-02-01 23:43:22,983", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/Users/marc-andreleclair/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.] }"}
{"dateTime" : "2019-02-01 23:43:23,055", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Initializing Spring embedded WebApplicationContext }"}
{"dateTime" : "2019-02-01 23:43:23,055", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Root WebApplicationContext: initialization completed in 1629 ms }"}
{"dateTime" : "2019-02-01 23:43:23,571", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HikariPool-1 - Starting... }"}
{"dateTime" : "2019-02-01 23:43:23,631", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HikariPool-1 - Start completed. }"}
{"dateTime" : "2019-02-01 23:43:23,679", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Building JPA container EntityManagerFactory for persistence unit 'default' }"}
{"dateTime" : "2019-02-01 23:43:23,692", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] }"}
{"dateTime" : "2019-02-01 23:43:23,764", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HHH000412: Hibernate Core {5.2.17.Final} }"}
{"dateTime" : "2019-02-01 23:43:23,765", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HHH000206: hibernate.properties not found }"}
{"dateTime" : "2019-02-01 23:43:23,801", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HCANN000001: Hibernate Commons Annotations {5.0.1.Final} }"}
{"dateTime" : "2019-02-01 23:43:23,905", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect }"}
{"dateTime" : "2019-02-01 23:43:24,113", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HHH000421: Disabling contextual LOB creation as hibernate.jdbc.lob.non_contextual_creation is true }"}
{"dateTime" : "2019-02-01 23:43:24,114", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@194ad7e5 }"}
{"dateTime" : "2019-02-01 23:43:24,665", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Initialized JPA EntityManagerFactory for persistence unit 'default' }"}
{"dateTime" : "2019-02-01 23:43:25,101", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapping filter: 'characterEncodingFilter' to: [/*] }"}
{"dateTime" : "2019-02-01 23:43:25,102", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapping filter: 'hiddenHttpMethodFilter' to: [/*] }"}
{"dateTime" : "2019-02-01 23:43:25,102", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapping filter: 'httpPutFormContentFilter' to: [/*] }"}
{"dateTime" : "2019-02-01 23:43:25,102", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapping filter: 'requestContextFilter' to: [/*] }"}
{"dateTime" : "2019-02-01 23:43:25,102", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapping filter: 'springSecurityFilterChain' to: [/*] }"}
{"dateTime" : "2019-02-01 23:43:25,102", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapping filter: 'jwtAuthenticationFilter' to: [/*] }"}
{"dateTime" : "2019-02-01 23:43:25,103", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Servlet dispatcherServlet mapped to [/] }"}
{"dateTime" : "2019-02-01 23:43:25,532", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] }"}
{"dateTime" : "2019-02-01 23:43:25,552", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning }"}
{"dateTime" : "2019-02-01 23:43:25,604", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/admin],methods=[GET]}" onto public java.lang.String appointmentscheduler.controller.rest.AdminController.areYouAnAdmin(long) }"}
{"dateTime" : "2019-02-01 23:43:25,610", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/appointments],methods=[POST]}" onto public appointmentscheduler.entity.appointment.Appointment appointmentscheduler.controller.rest.AppointmentController.add(appointmentscheduler.dto.appointment.AppointmentDTO) }"}
{"dateTime" : "2019-02-01 23:43:25,610", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/appointments/{id}],methods=[PUT]}" onto public appointmentscheduler.entity.appointment.Appointment appointmentscheduler.controller.rest.AppointmentController.update(long,appointmentscheduler.dto.appointment.AppointmentDTO) }"}
{"dateTime" : "2019-02-01 23:43:25,610", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/appointments/{id}],methods=[DELETE]}" onto public org.springframework.http.ResponseEntity appointmentscheduler.controller.rest.AppointmentController.delete(long) }"}
{"dateTime" : "2019-02-01 23:43:25,610", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/appointments/{id}],methods=[GET]}" onto public appointmentscheduler.entity.appointment.Appointment appointmentscheduler.controller.rest.AppointmentController.findById(long) }"}
{"dateTime" : "2019-02-01 23:43:25,611", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/appointments],methods=[GET]}" onto public java.util.List<appointmentscheduler.entity.appointment.Appointment> appointmentscheduler.controller.rest.AppointmentController.findAll() }"}
{"dateTime" : "2019-02-01 23:43:25,612", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/services],methods=[GET]}" onto public java.util.List<appointmentscheduler.entity.service.Service> appointmentscheduler.controller.rest.ServiceController.findAll() }"}
{"dateTime" : "2019-02-01 23:43:25,614", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/register],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> appointmentscheduler.controller.rest.UserController.register(appointmentscheduler.dto.user.UserRegisterDTO) throws java.io.IOException,javax.mail.MessagingException }"}
{"dateTime" : "2019-02-01 23:43:25,615", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/login],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> appointmentscheduler.controller.rest.UserController.login(appointmentscheduler.dto.user.UserLoginDTO) }"}
{"dateTime" : "2019-02-01 23:43:25,615", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/email],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.String>> appointmentscheduler.controller.rest.UserController.updateEmail(appointmentscheduler.dto.user.UpdateEmailDTO) }"}
{"dateTime" : "2019-02-01 23:43:25,615", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/password],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.String>> appointmentscheduler.controller.rest.UserController.updatePassword(appointmentscheduler.dto.user.UpdatePasswordDTO) }"}
{"dateTime" : "2019-02-01 23:43:25,616", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/settings],methods=[GET]}" onto public appointmentscheduler.entity.settings.Settings appointmentscheduler.controller.rest.UserController.getSettings(long) }"}
{"dateTime" : "2019-02-01 23:43:25,616", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/settings],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.String>> appointmentscheduler.controller.rest.UserController.updateSettings(appointmentscheduler.dto.settings.UpdateSettingsDTO) }"}
{"dateTime" : "2019-02-01 23:43:25,616", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/phone],methods=[GET]}" onto public appointmentscheduler.entity.phonenumber.PhoneNumber appointmentscheduler.controller.rest.UserController.getPhoneNumber(long) }"}
{"dateTime" : "2019-02-01 23:43:25,616", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/phone],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.String>> appointmentscheduler.controller.rest.UserController.saveOrUpdatePhoneNumber(appointmentscheduler.dto.phonenumber.PhoneNumberDTO) }"}
{"dateTime" : "2019-02-01 23:43:25,617", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/phone],methods=[DELETE]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.String>> appointmentscheduler.controller.rest.UserController.deletePhoneNumber() }"}
{"dateTime" : "2019-02-01 23:43:25,617", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/appointments],methods=[GET]}" onto public java.util.List<appointmentscheduler.entity.appointment.Appointment> appointmentscheduler.controller.rest.UserController.findByCurrentUser() }"}
{"dateTime" : "2019-02-01 23:43:25,619", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) }"}
{"dateTime" : "2019-02-01 23:43:25,619", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) }"}
{"dateTime" : "2019-02-01 23:43:25,659", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] }"}
{"dateTime" : "2019-02-01 23:43:25,659", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] }"}
{"dateTime" : "2019-02-01 23:43:25,690", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7a81065e, org.springframework.security.web.context.SecurityContextPersistenceFilter@47ffe971, org.springframework.security.web.header.HeaderWriterFilter@5d7ca698, org.springframework.web.filter.CorsFilter@6cd3ad8a, org.springframework.security.web.authentication.logout.LogoutFilter@2b03d52f, appointmentscheduler.util.JwtAuthenticationFilter@41e8baa6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@70c53dbe, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@68d651f2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@75181b50, org.springframework.security.web.session.SessionManagementFilter@4beabeec, org.springframework.security.web.access.ExceptionTranslationFilter@6daf7d37, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@79e66b2f] }"}
{"dateTime" : "2019-02-01 23:43:25,953", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b239d7d: startup date [Fri Feb 01 23:43:21 EST 2019]; root of context hierarchy }"}
{"dateTime" : "2019-02-01 23:43:26,314", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Registering beans for JMX exposure on startup }"}
{"dateTime" : "2019-02-01 23:43:26,315", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Bean with name 'dataSource' has been autodetected for JMX exposure }"}
{"dateTime" : "2019-02-01 23:43:26,320", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource] }"}
{"dateTime" : "2019-02-01 23:43:26,343", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HHH000397: Using ASTQueryTranslatorFactory }"}
{"dateTime" : "2019-02-01 23:43:26,559", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Starting ProtocolHandler ["http-nio-3000"] }"}
{"dateTime" : "2019-02-01 23:43:26,586", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Using a shared selector for servlet write/read }"}
{"dateTime" : "2019-02-01 23:43:26,595", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Tomcat started on port(s): 3000 (http) with context path '' }"}
{"dateTime" : "2019-02-01 23:43:26,598", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Started AppointmentScheduler in 5.608 seconds (JVM running for 6.608) }"}
{"dateTime" : "2019-02-01 23:43:36,076", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"http-nio-3000-exec-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Initializing Spring FrameworkServlet 'dispatcherServlet' }"}
{"dateTime" : "2019-02-01 23:43:36,076", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"http-nio-3000-exec-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:FrameworkServlet 'dispatcherServlet': initialization started }"}
{"dateTime" : "2019-02-01 23:43:36,096", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"http-nio-3000-exec-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms }"}
{"dateTime" : "2019-02-01 23:45:33,634", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"Thread-15","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b239d7d: startup date [Fri Feb 01 23:43:21 EST 2019]; root of context hierarchy }"}
{"dateTime" : "2019-02-01 23:45:33,636", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"Thread-15","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Unregistering JMX-exposed beans on shutdown }"}
{"dateTime" : "2019-02-01 23:45:33,637", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"Thread-15","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Unregistering JMX-exposed beans }"}
{"dateTime" : "2019-02-01 23:45:33,638", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"Thread-15","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Closing JPA EntityManagerFactory for persistence unit 'default' }"}
{"dateTime" : "2019-02-01 23:45:33,639", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"Thread-15","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HikariPool-1 - Shutdown initiated... }"}
{"dateTime" : "2019-02-01 23:45:33,641", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"Thread-15","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HikariPool-1 - Shutdown completed. }"}
{"dateTime" : "2019-02-01 23:45:39,552", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Starting AppointmentScheduler on MLeclaiookPro13 with PID 7392 (/Users/marc-andreleclair/Documents/AppSechduler/AppointmentScheduler/server/target/classes started by marc-andreleclair in /Users/marc-andreleclair/Documents/AppSechduler/AppointmentScheduler/server) }"}
{"dateTime" : "2019-02-01 23:45:39,561", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:No active profile set, falling back to default profiles: default }"}
{"dateTime" : "2019-02-01 23:45:39,620", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@79924b: startup date [Fri Feb 01 23:45:39 EST 2019]; root of context hierarchy }"}
{"dateTime" : "2019-02-01 23:45:39,677", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Starting AppointmentScheduler on MLeclaiookPro13 with PID 7390 (/Users/marc-andreleclair/Documents/AppSechduler/AppointmentScheduler/server/target/classes started by marc-andreleclair in /Users/marc-andreleclair/Documents/AppSechduler/AppointmentScheduler/server) }"}
{"dateTime" : "2019-02-01 23:45:39,691", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:No active profile set, falling back to default profiles: default }"}
{"dateTime" : "2019-02-01 23:45:39,742", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@198b6731: startup date [Fri Feb 01 23:45:39 EST 2019]; root of context hierarchy }"}
{"dateTime" : "2019-02-01 23:45:40,614", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$23b54176] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) }"}
{"dateTime" : "2019-02-01 23:45:40,731", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$bc6309b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) }"}
{"dateTime" : "2019-02-01 23:45:40,739", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) }"}
{"dateTime" : "2019-02-01 23:45:40,742", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@13a37e2a' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) }"}
{"dateTime" : "2019-02-01 23:45:40,747", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$e137ac62] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) }"}
{"dateTime" : "2019-02-01 23:45:40,760", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) }"}
{"dateTime" : "2019-02-01 23:45:41,121", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Tomcat initialized with port(s): 3000 (http) }"}
{"dateTime" : "2019-02-01 23:45:41,130", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Initializing ProtocolHandler ["http-nio-3000"] }"}
{"dateTime" : "2019-02-01 23:45:41,135", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6eab30b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) }"}
{"dateTime" : "2019-02-01 23:45:41,137", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Starting service [Tomcat] }"}
{"dateTime" : "2019-02-01 23:45:41,137", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Starting Servlet Engine: Apache Tomcat/8.5.34 }"}
{"dateTime" : "2019-02-01 23:45:41,141", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/Users/marc-andreleclair/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.] }"}
{"dateTime" : "2019-02-01 23:45:41,237", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Initializing Spring embedded WebApplicationContext }"}
{"dateTime" : "2019-02-01 23:45:41,238", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Root WebApplicationContext: initialization completed in 1618 ms }"}
{"dateTime" : "2019-02-01 23:45:41,364", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$758f8ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) }"}
{"dateTime" : "2019-02-01 23:45:41,378", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) }"}
{"dateTime" : "2019-02-01 23:45:41,385", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@333cb916' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) }"}
{"dateTime" : "2019-02-01 23:45:41,393", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$2c2d9ba0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) }"}
{"dateTime" : "2019-02-01 23:45:41,416", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) }"}
{"dateTime" : "2019-02-01 23:45:41,732", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HikariPool-1 - Starting... }"}
{"dateTime" : "2019-02-01 23:45:41,788", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HikariPool-1 - Start completed. }"}
{"dateTime" : "2019-02-01 23:45:41,832", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Building JPA container EntityManagerFactory for persistence unit 'default' }"}
{"dateTime" : "2019-02-01 23:45:41,842", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] }"}
{"dateTime" : "2019-02-01 23:45:41,914", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HHH000412: Hibernate Core {5.2.17.Final} }"}
{"dateTime" : "2019-02-01 23:45:41,922", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HHH000206: hibernate.properties not found }"}
{"dateTime" : "2019-02-01 23:45:42,021", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HCANN000001: Hibernate Commons Annotations {5.0.1.Final} }"}
{"dateTime" : "2019-02-01 23:45:42,143", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect }"}
{"dateTime" : "2019-02-01 23:45:42,214", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Tomcat initialized with port(s): 3000 (http) }"}
{"dateTime" : "2019-02-01 23:45:42,235", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Initializing ProtocolHandler ["http-nio-3000"] }"}
{"dateTime" : "2019-02-01 23:45:42,247", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Starting service [Tomcat] }"}
{"dateTime" : "2019-02-01 23:45:42,248", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Starting Servlet Engine: Apache Tomcat/8.5.34 }"}
{"dateTime" : "2019-02-01 23:45:42,252", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/Users/marc-andreleclair/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.] }"}
{"dateTime" : "2019-02-01 23:45:42,355", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Initializing Spring embedded WebApplicationContext }"}
{"dateTime" : "2019-02-01 23:45:42,356", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Root WebApplicationContext: initialization completed in 2614 ms }"}
{"dateTime" : "2019-02-01 23:45:42,467", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HHH000421: Disabling contextual LOB creation as hibernate.jdbc.lob.non_contextual_creation is true }"}
{"dateTime" : "2019-02-01 23:45:42,468", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@7f8eda4f }"}
{"dateTime" : "2019-02-01 23:45:42,986", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HikariPool-1 - Starting... }"}
{"dateTime" : "2019-02-01 23:45:43,084", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Initialized JPA EntityManagerFactory for persistence unit 'default' }"}
{"dateTime" : "2019-02-01 23:45:43,103", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HikariPool-1 - Start completed. }"}
{"dateTime" : "2019-02-01 23:45:43,166", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Building JPA container EntityManagerFactory for persistence unit 'default' }"}
{"dateTime" : "2019-02-01 23:45:43,185", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] }"}
{"dateTime" : "2019-02-01 23:45:43,295", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HHH000412: Hibernate Core {5.2.17.Final} }"}
{"dateTime" : "2019-02-01 23:45:43,297", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HHH000206: hibernate.properties not found }"}
{"dateTime" : "2019-02-01 23:45:43,344", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HCANN000001: Hibernate Commons Annotations {5.0.1.Final} }"}
{"dateTime" : "2019-02-01 23:45:43,511", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect }"}
{"dateTime" : "2019-02-01 23:45:43,563", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapping filter: 'characterEncodingFilter' to: [/*] }"}
{"dateTime" : "2019-02-01 23:45:43,564", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapping filter: 'hiddenHttpMethodFilter' to: [/*] }"}
{"dateTime" : "2019-02-01 23:45:43,564", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapping filter: 'httpPutFormContentFilter' to: [/*] }"}
{"dateTime" : "2019-02-01 23:45:43,565", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapping filter: 'requestContextFilter' to: [/*] }"}
{"dateTime" : "2019-02-01 23:45:43,565", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapping filter: 'springSecurityFilterChain' to: [/*] }"}
{"dateTime" : "2019-02-01 23:45:43,566", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapping filter: 'jwtAuthenticationFilter' to: [/*] }"}
{"dateTime" : "2019-02-01 23:45:43,566", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Servlet dispatcherServlet mapped to [/] }"}
{"dateTime" : "2019-02-01 23:45:43,885", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HHH000421: Disabling contextual LOB creation as hibernate.jdbc.lob.non_contextual_creation is true }"}
{"dateTime" : "2019-02-01 23:45:43,887", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@7c551673 }"}
{"dateTime" : "2019-02-01 23:45:44,090", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] }"}
{"dateTime" : "2019-02-01 23:45:44,104", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning }"}
{"dateTime" : "2019-02-01 23:45:44,151", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/admin],methods=[GET]}" onto public java.lang.String appointmentscheduler.controller.rest.AdminController.areYouAnAdmin(long) }"}
{"dateTime" : "2019-02-01 23:45:44,157", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/appointments],methods=[POST]}" onto public appointmentscheduler.entity.appointment.Appointment appointmentscheduler.controller.rest.AppointmentController.add(appointmentscheduler.dto.appointment.AppointmentDTO) }"}
{"dateTime" : "2019-02-01 23:45:44,158", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/appointments/{id}],methods=[PUT]}" onto public appointmentscheduler.entity.appointment.Appointment appointmentscheduler.controller.rest.AppointmentController.update(long,appointmentscheduler.dto.appointment.AppointmentDTO) }"}
{"dateTime" : "2019-02-01 23:45:44,158", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/appointments/{id}],methods=[DELETE]}" onto public org.springframework.http.ResponseEntity appointmentscheduler.controller.rest.AppointmentController.delete(long) }"}
{"dateTime" : "2019-02-01 23:45:44,158", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/appointments/{id}],methods=[GET]}" onto public appointmentscheduler.entity.appointment.Appointment appointmentscheduler.controller.rest.AppointmentController.findById(long) }"}
{"dateTime" : "2019-02-01 23:45:44,159", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/appointments],methods=[GET]}" onto public java.util.List<appointmentscheduler.entity.appointment.Appointment> appointmentscheduler.controller.rest.AppointmentController.findAll() }"}
{"dateTime" : "2019-02-01 23:45:44,161", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/services],methods=[GET]}" onto public java.util.List<appointmentscheduler.entity.service.Service> appointmentscheduler.controller.rest.ServiceController.findAll() }"}
{"dateTime" : "2019-02-01 23:45:44,163", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/register],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> appointmentscheduler.controller.rest.UserController.register(appointmentscheduler.dto.user.UserRegisterDTO) throws java.io.IOException,javax.mail.MessagingException }"}
{"dateTime" : "2019-02-01 23:45:44,164", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/login],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> appointmentscheduler.controller.rest.UserController.login(appointmentscheduler.dto.user.UserLoginDTO) }"}
{"dateTime" : "2019-02-01 23:45:44,164", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/email],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.String>> appointmentscheduler.controller.rest.UserController.updateEmail(appointmentscheduler.dto.user.UpdateEmailDTO) }"}
{"dateTime" : "2019-02-01 23:45:44,164", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/password],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.String>> appointmentscheduler.controller.rest.UserController.updatePassword(appointmentscheduler.dto.user.UpdatePasswordDTO) }"}
{"dateTime" : "2019-02-01 23:45:44,165", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/settings],methods=[GET]}" onto public appointmentscheduler.entity.settings.Settings appointmentscheduler.controller.rest.UserController.getSettings(long) }"}
{"dateTime" : "2019-02-01 23:45:44,165", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/settings],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.String>> appointmentscheduler.controller.rest.UserController.updateSettings(appointmentscheduler.dto.settings.UpdateSettingsDTO) }"}
{"dateTime" : "2019-02-01 23:45:44,165", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/phone],methods=[GET]}" onto public appointmentscheduler.entity.phonenumber.PhoneNumber appointmentscheduler.controller.rest.UserController.getPhoneNumber(long) }"}
{"dateTime" : "2019-02-01 23:45:44,166", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/phone],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.String>> appointmentscheduler.controller.rest.UserController.saveOrUpdatePhoneNumber(appointmentscheduler.dto.phonenumber.PhoneNumberDTO) }"}
{"dateTime" : "2019-02-01 23:45:44,166", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/phone],methods=[DELETE]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.String>> appointmentscheduler.controller.rest.UserController.deletePhoneNumber() }"}
{"dateTime" : "2019-02-01 23:45:44,166", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/appointments],methods=[GET]}" onto public java.util.List<appointmentscheduler.entity.appointment.Appointment> appointmentscheduler.controller.rest.UserController.findByCurrentUser() }"}
{"dateTime" : "2019-02-01 23:45:44,168", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) }"}
{"dateTime" : "2019-02-01 23:45:44,169", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) }"}
{"dateTime" : "2019-02-01 23:45:44,214", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] }"}
{"dateTime" : "2019-02-01 23:45:44,214", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] }"}
{"dateTime" : "2019-02-01 23:45:44,248", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@29a98d9f, org.springframework.security.web.context.SecurityContextPersistenceFilter@1894e40d, org.springframework.security.web.header.HeaderWriterFilter@4d3ca6c7, org.springframework.web.filter.CorsFilter@2da3b078, org.springframework.security.web.authentication.logout.LogoutFilter@7903d448, appointmentscheduler.util.JwtAuthenticationFilter@6f8ed021, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2133661d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1442f788, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@544e8149, org.springframework.security.web.session.SessionManagementFilter@47ffe971, org.springframework.security.web.access.ExceptionTranslationFilter@1f77b5cc, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@489091bd] }"}
{"dateTime" : "2019-02-01 23:45:44,524", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@79924b: startup date [Fri Feb 01 23:45:39 EST 2019]; root of context hierarchy }"}
{"dateTime" : "2019-02-01 23:45:44,785", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Initialized JPA EntityManagerFactory for persistence unit 'default' }"}
{"dateTime" : "2019-02-01 23:45:44,865", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Registering beans for JMX exposure on startup }"}
{"dateTime" : "2019-02-01 23:45:44,867", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Bean with name 'dataSource' has been autodetected for JMX exposure }"}
{"dateTime" : "2019-02-01 23:45:44,871", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource] }"}
{"dateTime" : "2019-02-01 23:45:44,889", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HHH000397: Using ASTQueryTranslatorFactory }"}
{"dateTime" : "2019-02-01 23:45:44,999", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Starting ProtocolHandler ["http-nio-3000"] }"}
{"dateTime" : "2019-02-01 23:45:45,021", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Using a shared selector for servlet write/read }"}
{"dateTime" : "2019-02-01 23:45:45,029", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Tomcat started on port(s): 3000 (http) with context path '' }"}
{"dateTime" : "2019-02-01 23:45:45,033", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Started AppointmentScheduler in 5.886 seconds (JVM running for 6.514) }"}
{"dateTime" : "2019-02-01 23:45:45,360", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapping filter: 'characterEncodingFilter' to: [/*] }"}
{"dateTime" : "2019-02-01 23:45:45,361", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapping filter: 'hiddenHttpMethodFilter' to: [/*] }"}
{"dateTime" : "2019-02-01 23:45:45,361", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapping filter: 'httpPutFormContentFilter' to: [/*] }"}
{"dateTime" : "2019-02-01 23:45:45,361", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapping filter: 'requestContextFilter' to: [/*] }"}
{"dateTime" : "2019-02-01 23:45:45,362", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapping filter: 'springSecurityFilterChain' to: [/*] }"}
{"dateTime" : "2019-02-01 23:45:45,362", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapping filter: 'jwtAuthenticationFilter' to: [/*] }"}
{"dateTime" : "2019-02-01 23:45:45,363", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Servlet dispatcherServlet mapped to [/] }"}
{"dateTime" : "2019-02-01 23:45:46,179", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] }"}
{"dateTime" : "2019-02-01 23:45:46,206", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning }"}
{"dateTime" : "2019-02-01 23:45:46,278", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/admin],methods=[GET]}" onto public java.lang.String appointmentscheduler.controller.rest.AdminController.areYouAnAdmin(long) }"}
{"dateTime" : "2019-02-01 23:45:46,287", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/appointments],methods=[POST]}" onto public appointmentscheduler.entity.appointment.Appointment appointmentscheduler.controller.rest.AppointmentController.add(appointmentscheduler.dto.appointment.AppointmentDTO) }"}
{"dateTime" : "2019-02-01 23:45:46,288", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/appointments/{id}],methods=[PUT]}" onto public appointmentscheduler.entity.appointment.Appointment appointmentscheduler.controller.rest.AppointmentController.update(long,appointmentscheduler.dto.appointment.AppointmentDTO) }"}
{"dateTime" : "2019-02-01 23:45:46,288", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/appointments/{id}],methods=[DELETE]}" onto public org.springframework.http.ResponseEntity appointmentscheduler.controller.rest.AppointmentController.delete(long) }"}
{"dateTime" : "2019-02-01 23:45:46,289", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/appointments],methods=[GET]}" onto public java.util.List<appointmentscheduler.entity.appointment.Appointment> appointmentscheduler.controller.rest.AppointmentController.findAll() }"}
{"dateTime" : "2019-02-01 23:45:46,289", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/appointments/{id}],methods=[GET]}" onto public appointmentscheduler.entity.appointment.Appointment appointmentscheduler.controller.rest.AppointmentController.findById(long) }"}
{"dateTime" : "2019-02-01 23:45:46,291", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/services],methods=[GET]}" onto public java.util.List<appointmentscheduler.entity.service.Service> appointmentscheduler.controller.rest.ServiceController.findAll() }"}
{"dateTime" : "2019-02-01 23:45:46,297", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/register],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> appointmentscheduler.controller.rest.UserController.register(appointmentscheduler.dto.user.UserRegisterDTO) throws java.io.IOException,javax.mail.MessagingException }"}
{"dateTime" : "2019-02-01 23:45:46,297", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/login],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> appointmentscheduler.controller.rest.UserController.login(appointmentscheduler.dto.user.UserLoginDTO) }"}
{"dateTime" : "2019-02-01 23:45:46,298", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/email],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.String>> appointmentscheduler.controller.rest.UserController.updateEmail(appointmentscheduler.dto.user.UpdateEmailDTO) }"}
{"dateTime" : "2019-02-01 23:45:46,298", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/password],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.String>> appointmentscheduler.controller.rest.UserController.updatePassword(appointmentscheduler.dto.user.UpdatePasswordDTO) }"}
{"dateTime" : "2019-02-01 23:45:46,298", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/settings],methods=[GET]}" onto public appointmentscheduler.entity.settings.Settings appointmentscheduler.controller.rest.UserController.getSettings(long) }"}
{"dateTime" : "2019-02-01 23:45:46,299", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/settings],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.String>> appointmentscheduler.controller.rest.UserController.updateSettings(appointmentscheduler.dto.settings.UpdateSettingsDTO) }"}
{"dateTime" : "2019-02-01 23:45:46,299", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/phone],methods=[GET]}" onto public appointmentscheduler.entity.phonenumber.PhoneNumber appointmentscheduler.controller.rest.UserController.getPhoneNumber(long) }"}
{"dateTime" : "2019-02-01 23:45:46,299", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/phone],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.String>> appointmentscheduler.controller.rest.UserController.saveOrUpdatePhoneNumber(appointmentscheduler.dto.phonenumber.PhoneNumberDTO) }"}
{"dateTime" : "2019-02-01 23:45:46,300", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/phone],methods=[DELETE]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.String>> appointmentscheduler.controller.rest.UserController.deletePhoneNumber() }"}
{"dateTime" : "2019-02-01 23:45:46,300", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/appointments],methods=[GET]}" onto public java.util.List<appointmentscheduler.entity.appointment.Appointment> appointmentscheduler.controller.rest.UserController.findByCurrentUser() }"}
{"dateTime" : "2019-02-01 23:45:46,303", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) }"}
{"dateTime" : "2019-02-01 23:45:46,304", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) }"}
{"dateTime" : "2019-02-01 23:45:46,375", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] }"}
{"dateTime" : "2019-02-01 23:45:46,375", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] }"}
{"dateTime" : "2019-02-01 23:45:46,428", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1d61a348, org.springframework.security.web.context.SecurityContextPersistenceFilter@58740366, org.springframework.security.web.header.HeaderWriterFilter@3650d4fc, org.springframework.web.filter.CorsFilter@78a515e4, org.springframework.security.web.authentication.logout.LogoutFilter@671c4166, appointmentscheduler.util.JwtAuthenticationFilter@54d7af86, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@37468787, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@33063f5b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@d2291de, org.springframework.security.web.session.SessionManagementFilter@7d3c09ec, org.springframework.security.web.access.ExceptionTranslationFilter@6e7c351d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2db4ad1] }"}
{"dateTime" : "2019-02-01 23:45:46,935", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@198b6731: startup date [Fri Feb 01 23:45:39 EST 2019]; root of context hierarchy }"}
{"dateTime" : "2019-02-01 23:45:47,326", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Registering beans for JMX exposure on startup }"}
{"dateTime" : "2019-02-01 23:45:47,327", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Bean with name 'dataSource' has been autodetected for JMX exposure }"}
{"dateTime" : "2019-02-01 23:45:47,333", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource] }"}
{"dateTime" : "2019-02-01 23:45:47,355", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HHH000397: Using ASTQueryTranslatorFactory }"}
{"dateTime" : "2019-02-01 23:45:47,505", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Starting ProtocolHandler ["http-nio-3000"] }"}
{"dateTime" : "2019-02-01 23:45:47,522", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Failed to start connector [Connector[HTTP/1.1-3000]] }"}
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-3000]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:780)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:412)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:333)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1277)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1265)
	at appointmentscheduler.AppointmentScheduler.main(AppointmentScheduler.java:11)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:219)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1151)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
{"dateTime" : "2019-02-01 23:45:47,525", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Pausing ProtocolHandler ["http-nio-3000"] }"}
{"dateTime" : "2019-02-01 23:45:47,525", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Stopping service [Tomcat] }"}
{"dateTime" : "2019-02-01 23:45:47,528", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748) }"}
{"dateTime" : "2019-02-01 23:45:47,528", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:The web application [ROOT] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:467)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1073)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748) }"}
{"dateTime" : "2019-02-01 23:45:47,532", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored. }"}
{"dateTime" : "2019-02-01 23:45:47,533", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Stopping ProtocolHandler ["http-nio-3000"] }"}
{"dateTime" : "2019-02-01 23:45:47,533", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Destroying ProtocolHandler ["http-nio-3000"] }"}
{"dateTime" : "2019-02-01 23:45:47,537", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled. }"}
{"dateTime" : "2019-02-01 23:45:47,541", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 3000 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 3000, or configure this application to listen on another port.
 }"}
{"dateTime" : "2019-02-01 23:45:47,542", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@198b6731: startup date [Fri Feb 01 23:45:39 EST 2019]; root of context hierarchy }"}
{"dateTime" : "2019-02-01 23:45:47,544", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Unregistering JMX-exposed beans on shutdown }"}
{"dateTime" : "2019-02-01 23:45:47,544", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Unregistering JMX-exposed beans }"}
{"dateTime" : "2019-02-01 23:45:47,546", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Closing JPA EntityManagerFactory for persistence unit 'default' }"}
{"dateTime" : "2019-02-01 23:45:47,547", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HikariPool-1 - Shutdown initiated... }"}
{"dateTime" : "2019-02-01 23:45:47,554", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HikariPool-1 - Shutdown completed. }"}
{"dateTime" : "2019-02-01 23:45:50,292", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"http-nio-3000-exec-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Initializing Spring FrameworkServlet 'dispatcherServlet' }"}
{"dateTime" : "2019-02-01 23:45:50,292", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"http-nio-3000-exec-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:FrameworkServlet 'dispatcherServlet': initialization started }"}
{"dateTime" : "2019-02-01 23:45:50,309", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"http-nio-3000-exec-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:FrameworkServlet 'dispatcherServlet': initialization completed in 17 ms }"}
{"dateTime" : "2019-02-01 23:46:27,022", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"Thread-16","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@79924b: startup date [Fri Feb 01 23:45:39 EST 2019]; root of context hierarchy }"}
{"dateTime" : "2019-02-01 23:46:27,024", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"Thread-16","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Unregistering JMX-exposed beans on shutdown }"}
{"dateTime" : "2019-02-01 23:46:27,024", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"Thread-16","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Unregistering JMX-exposed beans }"}
{"dateTime" : "2019-02-01 23:46:27,026", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"Thread-16","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Closing JPA EntityManagerFactory for persistence unit 'default' }"}
{"dateTime" : "2019-02-01 23:46:27,027", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"Thread-16","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HikariPool-1 - Shutdown initiated... }"}
{"dateTime" : "2019-02-01 23:46:27,029", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"Thread-16","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HikariPool-1 - Shutdown completed. }"}
{"dateTime" : "2019-02-01 23:46:30,766", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Starting AppointmentScheduler on MLeclaiookPro13 with PID 7400 (/Users/marc-andreleclair/Documents/AppSechduler/AppointmentScheduler/server/target/classes started by marc-andreleclair in /Users/marc-andreleclair/Documents/AppSechduler/AppointmentScheduler/server) }"}
{"dateTime" : "2019-02-01 23:46:30,774", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:No active profile set, falling back to default profiles: default }"}
{"dateTime" : "2019-02-01 23:46:30,815", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@47af7f3d: startup date [Fri Feb 01 23:46:30 EST 2019]; root of context hierarchy }"}
{"dateTime" : "2019-02-01 23:46:31,639", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1ebdf479] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) }"}
{"dateTime" : "2019-02-01 23:46:31,767", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$b76bbcb3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) }"}
{"dateTime" : "2019-02-01 23:46:31,773", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) }"}
{"dateTime" : "2019-02-01 23:46:31,777", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@9a7a808' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) }"}
{"dateTime" : "2019-02-01 23:46:31,783", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$dc405f65] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) }"}
{"dateTime" : "2019-02-01 23:46:31,795", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) }"}
{"dateTime" : "2019-02-01 23:46:32,129", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Tomcat initialized with port(s): 3000 (http) }"}
{"dateTime" : "2019-02-01 23:46:32,137", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Initializing ProtocolHandler ["http-nio-3000"] }"}
{"dateTime" : "2019-02-01 23:46:32,142", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Starting service [Tomcat] }"}
{"dateTime" : "2019-02-01 23:46:32,142", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Starting Servlet Engine: Apache Tomcat/8.5.34 }"}
{"dateTime" : "2019-02-01 23:46:32,144", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/Users/marc-andreleclair/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.] }"}
{"dateTime" : "2019-02-01 23:46:32,209", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Initializing Spring embedded WebApplicationContext }"}
{"dateTime" : "2019-02-01 23:46:32,210", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Root WebApplicationContext: initialization completed in 1395 ms }"}
{"dateTime" : "2019-02-01 23:46:32,596", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HikariPool-1 - Starting... }"}
{"dateTime" : "2019-02-01 23:46:32,640", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HikariPool-1 - Start completed. }"}
{"dateTime" : "2019-02-01 23:46:32,676", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Building JPA container EntityManagerFactory for persistence unit 'default' }"}
{"dateTime" : "2019-02-01 23:46:32,684", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] }"}
{"dateTime" : "2019-02-01 23:46:32,721", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HHH000412: Hibernate Core {5.2.17.Final} }"}
{"dateTime" : "2019-02-01 23:46:32,722", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HHH000206: hibernate.properties not found }"}
{"dateTime" : "2019-02-01 23:46:32,751", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HCANN000001: Hibernate Commons Annotations {5.0.1.Final} }"}
{"dateTime" : "2019-02-01 23:46:32,828", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect }"}
{"dateTime" : "2019-02-01 23:46:33,045", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HHH000421: Disabling contextual LOB creation as hibernate.jdbc.lob.non_contextual_creation is true }"}
{"dateTime" : "2019-02-01 23:46:33,046", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@ff3f7fa }"}
{"dateTime" : "2019-02-01 23:46:33,513", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Initialized JPA EntityManagerFactory for persistence unit 'default' }"}
{"dateTime" : "2019-02-01 23:46:33,837", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapping filter: 'characterEncodingFilter' to: [/*] }"}
{"dateTime" : "2019-02-01 23:46:33,837", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapping filter: 'hiddenHttpMethodFilter' to: [/*] }"}
{"dateTime" : "2019-02-01 23:46:33,837", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapping filter: 'httpPutFormContentFilter' to: [/*] }"}
{"dateTime" : "2019-02-01 23:46:33,837", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapping filter: 'requestContextFilter' to: [/*] }"}
{"dateTime" : "2019-02-01 23:46:33,838", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapping filter: 'springSecurityFilterChain' to: [/*] }"}
{"dateTime" : "2019-02-01 23:46:33,838", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapping filter: 'jwtAuthenticationFilter' to: [/*] }"}
{"dateTime" : "2019-02-01 23:46:33,838", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Servlet dispatcherServlet mapped to [/] }"}
{"dateTime" : "2019-02-01 23:46:34,295", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] }"}
{"dateTime" : "2019-02-01 23:46:34,311", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning }"}
{"dateTime" : "2019-02-01 23:46:34,357", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/admin],methods=[GET]}" onto public java.lang.String appointmentscheduler.controller.rest.AdminController.areYouAnAdmin(long) }"}
{"dateTime" : "2019-02-01 23:46:34,363", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/appointments],methods=[POST]}" onto public appointmentscheduler.entity.appointment.Appointment appointmentscheduler.controller.rest.AppointmentController.add(appointmentscheduler.dto.appointment.AppointmentDTO) }"}
{"dateTime" : "2019-02-01 23:46:34,363", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/appointments/{id}],methods=[PUT]}" onto public appointmentscheduler.entity.appointment.Appointment appointmentscheduler.controller.rest.AppointmentController.update(long,appointmentscheduler.dto.appointment.AppointmentDTO) }"}
{"dateTime" : "2019-02-01 23:46:34,364", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/appointments/{id}],methods=[DELETE]}" onto public org.springframework.http.ResponseEntity appointmentscheduler.controller.rest.AppointmentController.delete(long) }"}
{"dateTime" : "2019-02-01 23:46:34,364", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/appointments/{id}],methods=[GET]}" onto public appointmentscheduler.entity.appointment.Appointment appointmentscheduler.controller.rest.AppointmentController.findById(long) }"}
{"dateTime" : "2019-02-01 23:46:34,364", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/appointments],methods=[GET]}" onto public java.util.List<appointmentscheduler.entity.appointment.Appointment> appointmentscheduler.controller.rest.AppointmentController.findAll() }"}
{"dateTime" : "2019-02-01 23:46:34,365", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/services],methods=[GET]}" onto public java.util.List<appointmentscheduler.entity.service.Service> appointmentscheduler.controller.rest.ServiceController.findAll() }"}
{"dateTime" : "2019-02-01 23:46:34,368", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/register],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> appointmentscheduler.controller.rest.UserController.register(appointmentscheduler.dto.user.UserRegisterDTO) throws java.io.IOException,javax.mail.MessagingException }"}
{"dateTime" : "2019-02-01 23:46:34,368", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/login],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> appointmentscheduler.controller.rest.UserController.login(appointmentscheduler.dto.user.UserLoginDTO) }"}
{"dateTime" : "2019-02-01 23:46:34,368", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/email],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.String>> appointmentscheduler.controller.rest.UserController.updateEmail(appointmentscheduler.dto.user.UpdateEmailDTO) }"}
{"dateTime" : "2019-02-01 23:46:34,369", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/password],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.String>> appointmentscheduler.controller.rest.UserController.updatePassword(appointmentscheduler.dto.user.UpdatePasswordDTO) }"}
{"dateTime" : "2019-02-01 23:46:34,369", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/settings],methods=[GET]}" onto public appointmentscheduler.entity.settings.Settings appointmentscheduler.controller.rest.UserController.getSettings(long) }"}
{"dateTime" : "2019-02-01 23:46:34,369", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/settings],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.String>> appointmentscheduler.controller.rest.UserController.updateSettings(appointmentscheduler.dto.settings.UpdateSettingsDTO) }"}
{"dateTime" : "2019-02-01 23:46:34,369", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/phone],methods=[GET]}" onto public appointmentscheduler.entity.phonenumber.PhoneNumber appointmentscheduler.controller.rest.UserController.getPhoneNumber(long) }"}
{"dateTime" : "2019-02-01 23:46:34,370", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/phone],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.String>> appointmentscheduler.controller.rest.UserController.saveOrUpdatePhoneNumber(appointmentscheduler.dto.phonenumber.PhoneNumberDTO) }"}
{"dateTime" : "2019-02-01 23:46:34,370", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/phone],methods=[DELETE]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.String>> appointmentscheduler.controller.rest.UserController.deletePhoneNumber() }"}
{"dateTime" : "2019-02-01 23:46:34,370", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/appointments],methods=[GET]}" onto public java.util.List<appointmentscheduler.entity.appointment.Appointment> appointmentscheduler.controller.rest.UserController.findByCurrentUser() }"}
{"dateTime" : "2019-02-01 23:46:34,372", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) }"}
{"dateTime" : "2019-02-01 23:46:34,372", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) }"}
{"dateTime" : "2019-02-01 23:46:34,416", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] }"}
{"dateTime" : "2019-02-01 23:46:34,416", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] }"}
{"dateTime" : "2019-02-01 23:46:34,448", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@17f3eefb, org.springframework.security.web.context.SecurityContextPersistenceFilter@3a22bad6, org.springframework.security.web.header.HeaderWriterFilter@7cea0110, org.springframework.web.filter.CorsFilter@3ba46e63, org.springframework.security.web.authentication.logout.LogoutFilter@1e86a5a7, appointmentscheduler.util.JwtAuthenticationFilter@667c5269, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@245ec1a6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@78c1372d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@788ddc1f, org.springframework.security.web.session.SessionManagementFilter@4f668f29, org.springframework.security.web.access.ExceptionTranslationFilter@3f4f5330, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@77bb48d5] }"}
{"dateTime" : "2019-02-01 23:46:34,687", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@47af7f3d: startup date [Fri Feb 01 23:46:30 EST 2019]; root of context hierarchy }"}
{"dateTime" : "2019-02-01 23:46:34,973", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Registering beans for JMX exposure on startup }"}
{"dateTime" : "2019-02-01 23:46:34,974", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Bean with name 'dataSource' has been autodetected for JMX exposure }"}
{"dateTime" : "2019-02-01 23:46:34,978", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource] }"}
{"dateTime" : "2019-02-01 23:46:34,995", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HHH000397: Using ASTQueryTranslatorFactory }"}
{"dateTime" : "2019-02-01 23:46:35,090", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Starting ProtocolHandler ["http-nio-3000"] }"}
{"dateTime" : "2019-02-01 23:46:35,111", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Using a shared selector for servlet write/read }"}
{"dateTime" : "2019-02-01 23:46:35,119", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Tomcat started on port(s): 3000 (http) with context path '' }"}
{"dateTime" : "2019-02-01 23:46:35,121", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Started AppointmentScheduler in 4.594 seconds (JVM running for 5.158) }"}
{"dateTime" : "2019-02-01 23:46:38,291", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"http-nio-3000-exec-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Initializing Spring FrameworkServlet 'dispatcherServlet' }"}
{"dateTime" : "2019-02-01 23:46:38,291", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"http-nio-3000-exec-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:FrameworkServlet 'dispatcherServlet': initialization started }"}
{"dateTime" : "2019-02-01 23:46:38,311", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"http-nio-3000-exec-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms }"}
{"dateTime" : "2019-02-01 23:47:02,868", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"http-nio-3000-exec-5","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class org.hibernate.proxy.pojo.javassist.JavassistLazyInitializer]; nested exception is com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.javassist.JavassistLazyInitializer and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0]->appointmentscheduler.entity.appointment.Appointment["employee"]->appointmentscheduler.entity.user.User_$$_jvst938_5["employeeServices"]->org.hibernate.collection.internal.PersistentBag[3]->appointmentscheduler.entity.service.Service_$$_jvst938_2["handler"])] with root cause }"}
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.javassist.JavassistLazyInitializer and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0]->appointmentscheduler.entity.appointment.Appointment["employee"]->appointmentscheduler.entity.user.User_$$_jvst938_5["employeeServices"]->org.hibernate.collection.internal.PersistentBag[3]->appointmentscheduler.entity.service.Service_$$_jvst938_2["handler"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1191)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:312)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:71)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:33)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:480)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:400)
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1392)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:913)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:285)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:272)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:180)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:119)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at appointmentscheduler.util.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:71)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:806)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1498)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
{"dateTime" : "2019-02-01 23:48:12,717", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"Thread-14","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@47af7f3d: startup date [Fri Feb 01 23:46:30 EST 2019]; root of context hierarchy }"}
{"dateTime" : "2019-02-01 23:48:12,722", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"Thread-14","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Unregistering JMX-exposed beans on shutdown }"}
{"dateTime" : "2019-02-01 23:48:12,723", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"Thread-14","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Unregistering JMX-exposed beans }"}
{"dateTime" : "2019-02-01 23:48:12,725", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"Thread-14","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Closing JPA EntityManagerFactory for persistence unit 'default' }"}
{"dateTime" : "2019-02-01 23:48:12,728", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"Thread-14","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HikariPool-1 - Shutdown initiated... }"}
{"dateTime" : "2019-02-01 23:48:12,732", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"Thread-14","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HikariPool-1 - Shutdown completed. }"}
{"dateTime" : "2019-02-01 23:48:15,810", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Starting AppointmentScheduler on MLeclaiookPro13 with PID 7410 (/Users/marc-andreleclair/Documents/AppSechduler/AppointmentScheduler/server/target/classes started by marc-andreleclair in /Users/marc-andreleclair/Documents/AppSechduler/AppointmentScheduler/server) }"}
{"dateTime" : "2019-02-01 23:48:15,815", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:No active profile set, falling back to default profiles: default }"}
{"dateTime" : "2019-02-01 23:48:15,852", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7f3b84b8: startup date [Fri Feb 01 23:48:15 EST 2019]; root of context hierarchy }"}
{"dateTime" : "2019-02-01 23:48:16,669", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a68acb7e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) }"}
{"dateTime" : "2019-02-01 23:48:16,777", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$3f3893b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) }"}
{"dateTime" : "2019-02-01 23:48:16,784", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) }"}
{"dateTime" : "2019-02-01 23:48:16,787", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7923f5b3' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) }"}
{"dateTime" : "2019-02-01 23:48:16,792", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$640d366a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) }"}
{"dateTime" : "2019-02-01 23:48:16,804", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) }"}
{"dateTime" : "2019-02-01 23:48:17,142", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Tomcat initialized with port(s): 3000 (http) }"}
{"dateTime" : "2019-02-01 23:48:17,150", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Initializing ProtocolHandler ["http-nio-3000"] }"}
{"dateTime" : "2019-02-01 23:48:17,156", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Starting service [Tomcat] }"}
{"dateTime" : "2019-02-01 23:48:17,157", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Starting Servlet Engine: Apache Tomcat/8.5.34 }"}
{"dateTime" : "2019-02-01 23:48:17,159", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/Users/marc-andreleclair/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.] }"}
{"dateTime" : "2019-02-01 23:48:17,245", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Initializing Spring embedded WebApplicationContext }"}
{"dateTime" : "2019-02-01 23:48:17,245", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Root WebApplicationContext: initialization completed in 1393 ms }"}
{"dateTime" : "2019-02-01 23:48:17,614", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HikariPool-1 - Starting... }"}
{"dateTime" : "2019-02-01 23:48:17,658", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HikariPool-1 - Start completed. }"}
{"dateTime" : "2019-02-01 23:48:17,694", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Building JPA container EntityManagerFactory for persistence unit 'default' }"}
{"dateTime" : "2019-02-01 23:48:17,702", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] }"}
{"dateTime" : "2019-02-01 23:48:17,739", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HHH000412: Hibernate Core {5.2.17.Final} }"}
{"dateTime" : "2019-02-01 23:48:17,740", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HHH000206: hibernate.properties not found }"}
{"dateTime" : "2019-02-01 23:48:17,763", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HCANN000001: Hibernate Commons Annotations {5.0.1.Final} }"}
{"dateTime" : "2019-02-01 23:48:17,841", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect }"}
{"dateTime" : "2019-02-01 23:48:18,099", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HHH000421: Disabling contextual LOB creation as hibernate.jdbc.lob.non_contextual_creation is true }"}
{"dateTime" : "2019-02-01 23:48:18,101", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@6943881f }"}
{"dateTime" : "2019-02-01 23:48:18,568", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Initialized JPA EntityManagerFactory for persistence unit 'default' }"}
{"dateTime" : "2019-02-01 23:48:18,940", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapping filter: 'characterEncodingFilter' to: [/*] }"}
{"dateTime" : "2019-02-01 23:48:18,941", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapping filter: 'hiddenHttpMethodFilter' to: [/*] }"}
{"dateTime" : "2019-02-01 23:48:18,941", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapping filter: 'httpPutFormContentFilter' to: [/*] }"}
{"dateTime" : "2019-02-01 23:48:18,941", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapping filter: 'requestContextFilter' to: [/*] }"}
{"dateTime" : "2019-02-01 23:48:18,942", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapping filter: 'springSecurityFilterChain' to: [/*] }"}
{"dateTime" : "2019-02-01 23:48:18,942", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapping filter: 'jwtAuthenticationFilter' to: [/*] }"}
{"dateTime" : "2019-02-01 23:48:18,942", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"localhost-startStop-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Servlet dispatcherServlet mapped to [/] }"}
{"dateTime" : "2019-02-01 23:48:19,338", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] }"}
{"dateTime" : "2019-02-01 23:48:19,351", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning }"}
{"dateTime" : "2019-02-01 23:48:19,396", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/admin],methods=[GET]}" onto public java.lang.String appointmentscheduler.controller.rest.AdminController.areYouAnAdmin(long) }"}
{"dateTime" : "2019-02-01 23:48:19,402", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/appointments],methods=[POST]}" onto public appointmentscheduler.entity.appointment.Appointment appointmentscheduler.controller.rest.AppointmentController.add(appointmentscheduler.dto.appointment.AppointmentDTO) }"}
{"dateTime" : "2019-02-01 23:48:19,403", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/appointments/{id}],methods=[PUT]}" onto public appointmentscheduler.entity.appointment.Appointment appointmentscheduler.controller.rest.AppointmentController.update(long,appointmentscheduler.dto.appointment.AppointmentDTO) }"}
{"dateTime" : "2019-02-01 23:48:19,403", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/appointments/{id}],methods=[DELETE]}" onto public org.springframework.http.ResponseEntity appointmentscheduler.controller.rest.AppointmentController.delete(long) }"}
{"dateTime" : "2019-02-01 23:48:19,403", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/appointments],methods=[GET]}" onto public java.util.List<appointmentscheduler.entity.appointment.Appointment> appointmentscheduler.controller.rest.AppointmentController.findAll() }"}
{"dateTime" : "2019-02-01 23:48:19,403", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/appointments/{id}],methods=[GET]}" onto public appointmentscheduler.entity.appointment.Appointment appointmentscheduler.controller.rest.AppointmentController.findById(long) }"}
{"dateTime" : "2019-02-01 23:48:19,404", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/services],methods=[GET]}" onto public java.util.List<appointmentscheduler.entity.service.Service> appointmentscheduler.controller.rest.ServiceController.findAll() }"}
{"dateTime" : "2019-02-01 23:48:19,408", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/register],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> appointmentscheduler.controller.rest.UserController.register(appointmentscheduler.dto.user.UserRegisterDTO) throws java.io.IOException,javax.mail.MessagingException }"}
{"dateTime" : "2019-02-01 23:48:19,408", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/login],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> appointmentscheduler.controller.rest.UserController.login(appointmentscheduler.dto.user.UserLoginDTO) }"}
{"dateTime" : "2019-02-01 23:48:19,409", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/email],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.String>> appointmentscheduler.controller.rest.UserController.updateEmail(appointmentscheduler.dto.user.UpdateEmailDTO) }"}
{"dateTime" : "2019-02-01 23:48:19,409", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/password],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.String>> appointmentscheduler.controller.rest.UserController.updatePassword(appointmentscheduler.dto.user.UpdatePasswordDTO) }"}
{"dateTime" : "2019-02-01 23:48:19,409", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/settings],methods=[GET]}" onto public appointmentscheduler.entity.settings.Settings appointmentscheduler.controller.rest.UserController.getSettings(long) }"}
{"dateTime" : "2019-02-01 23:48:19,409", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/settings],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.String>> appointmentscheduler.controller.rest.UserController.updateSettings(appointmentscheduler.dto.settings.UpdateSettingsDTO) }"}
{"dateTime" : "2019-02-01 23:48:19,410", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/phone],methods=[GET]}" onto public appointmentscheduler.entity.phonenumber.PhoneNumber appointmentscheduler.controller.rest.UserController.getPhoneNumber(long) }"}
{"dateTime" : "2019-02-01 23:48:19,410", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/phone],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.String>> appointmentscheduler.controller.rest.UserController.saveOrUpdatePhoneNumber(appointmentscheduler.dto.phonenumber.PhoneNumberDTO) }"}
{"dateTime" : "2019-02-01 23:48:19,410", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/phone],methods=[DELETE]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.String>> appointmentscheduler.controller.rest.UserController.deletePhoneNumber() }"}
{"dateTime" : "2019-02-01 23:48:19,410", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/api/user/appointments],methods=[GET]}" onto public java.util.List<appointmentscheduler.entity.appointment.Appointment> appointmentscheduler.controller.rest.UserController.findByCurrentUser() }"}
{"dateTime" : "2019-02-01 23:48:19,412", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) }"}
{"dateTime" : "2019-02-01 23:48:19,412", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) }"}
{"dateTime" : "2019-02-01 23:48:19,456", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] }"}
{"dateTime" : "2019-02-01 23:48:19,456", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] }"}
{"dateTime" : "2019-02-01 23:48:19,487", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@57f9b467, org.springframework.security.web.context.SecurityContextPersistenceFilter@24e83d19, org.springframework.security.web.header.HeaderWriterFilter@761956ac, org.springframework.web.filter.CorsFilter@6d5c2745, org.springframework.security.web.authentication.logout.LogoutFilter@14982a82, appointmentscheduler.util.JwtAuthenticationFilter@20891dc3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@9b21bd3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@612e21b9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@44b29496, org.springframework.security.web.session.SessionManagementFilter@14823f76, org.springframework.security.web.access.ExceptionTranslationFilter@10c07b8d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6ada9c0c] }"}
{"dateTime" : "2019-02-01 23:48:19,731", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7f3b84b8: startup date [Fri Feb 01 23:48:15 EST 2019]; root of context hierarchy }"}
{"dateTime" : "2019-02-01 23:48:20,025", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Registering beans for JMX exposure on startup }"}
{"dateTime" : "2019-02-01 23:48:20,027", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Bean with name 'dataSource' has been autodetected for JMX exposure }"}
{"dateTime" : "2019-02-01 23:48:20,030", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource] }"}
{"dateTime" : "2019-02-01 23:48:20,047", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:HHH000397: Using ASTQueryTranslatorFactory }"}
{"dateTime" : "2019-02-01 23:48:20,147", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Starting ProtocolHandler ["http-nio-3000"] }"}
{"dateTime" : "2019-02-01 23:48:20,174", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Using a shared selector for servlet write/read }"}
{"dateTime" : "2019-02-01 23:48:20,181", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Tomcat started on port(s): 3000 (http) with context path '' }"}
{"dateTime" : "2019-02-01 23:48:20,185", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"main","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Started AppointmentScheduler in 4.602 seconds (JVM running for 5.122) }"}
{"dateTime" : "2019-02-01 23:48:33,200", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"http-nio-3000-exec-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:Initializing Spring FrameworkServlet 'dispatcherServlet' }"}
{"dateTime" : "2019-02-01 23:48:33,200", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"http-nio-3000-exec-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:FrameworkServlet 'dispatcherServlet': initialization started }"}
{"dateTime" : "2019-02-01 23:48:33,218", "host":"", "txnIdentifier":"", "serviceName":"", "executionTime":"","threadId":"http-nio-3000-exec-1","sessionId":"","channelName":"","remoteHost":"","errorCode":"","errorMsg":"","environment":"","component":"","request":"","response":"","keyInfo":"{message:FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms }"}
